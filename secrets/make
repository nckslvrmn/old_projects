#!/bin/bash

LAYER_BASE="layer/"

## LAMBDA FUNCTIONS ##
function make_function_zip() {
  echo "making function.zip..."
  rm -f function.zip
  zip -rq function.zip app/ lambda.rb
}

function init_layer() {
  rm -rf layer
  mkdir -p $LAYER_BASE/lib
  mkdir -p $LAYER_BASE/ruby/lib
}

# LAMBDA LAYER FUNCTIONS ##
# this assumes openssl installs its libs in /usr/lib
function get_ssl_libs() {
  lib_path="$LAYER_BASE/lib"
  libssl=$(ldd `which openssl` | /bin/grep libssl.so | awk '{print $3}')
  libcrypto=$(ldd `which openssl` | /bin/grep libssl.so | awk '{print $3}')
  cp $libssl $lib_path
  ln -sr $lib_path/libssl.so.1.1 $lib_path/libssl.so

  cp $libcrypto $lib_path
  ln -s $lib_path/libcrypto.so.1.1 $lib_path/libcrypto.so
}

# this assumes you are using rvm to install ruby
function get_openssl_lib() {
  openssl=$(ruby -e "require 'openssl'; puts $\".select{|f| f if f.include?('openssl.so')}")
  cp $openssl layer/ruby/lib
}

function get_layer_gems() {
  rm -rf vendor
  rm -rf $LAYER_BASE/ruby/gems
  bundle --quiet
  mv vendor/bundle/ruby $LAYER_BASE/ruby/gems
  rm -rf vendor
}

function make_layer_zip() {
  echo "making layer.zip..."
  rm -f layer.zip
  init_layer
  get_ssl_libs
  get_openssl_lib
  get_layer_gems
  cd layer
  zip -rq layer.zip .
  cd - > /dev/null
  mv layer/layer.zip .
}

## CLEAN ##
function clean() {
  rm -f *.zip
  rm -rf layer
  rm -rf vendor
}

case $1 in
  all)
    make_layer_zip
    make_function_zip
    ;;
  function)
    make_function_zip
    ;;
  layer)
    make_layer_zip
    ;;
  clean)
    clean
    ;;
  *)
    echo "please use all/function/layer as argument"
    exit 1
    ;;
esac
